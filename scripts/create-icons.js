const fs = require('fs');
const path = require('path');

// 创建一个简单的1x1像素的蓝色PNG图标
function createSimplePNG(size) {
  // 这是一个最小的有效PNG文件头
  const pngHeader = Buffer.from([
    0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, // PNG签名
    0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, // IHDR chunk长度和类型
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // 1x1像素
    0x08, 0x02, 0x00, 0x00, 0x00, 0x90, 0x77, 0x53, // 8位RGB，压缩等
    0xDE, 0x00, 0x00, 0x00, 0x0C, 0x49, 0x44, 0x41, // IDAT chunk
    0x54, 0x08, 0x99, 0x01, 0x01, 0x00, 0x00, 0x00, // 压缩数据开始
    0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x25, // 简单的蓝色像素数据
    0xDB, 0x56, 0xCA, 0x00, 0x00, 0x00, 0x00, 0x49, // IDAT数据结束
    0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82        // IEND chunk
  ]);
  
  return pngHeader;
}

// 创建SVG到PNG的简易转换（实际只是复制一个基础PNG）
function createIconPNG(size) {
  // 返回一个基础的PNG数据
  const basicPNG = Buffer.from([
    0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A,
    0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52,
    0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, // 32x32像素
    0x08, 0x06, 0x00, 0x00, 0x00, 0x73, 0x7A, 0x7A,
    0xF4, 0x00, 0x00, 0x00, 0x19, 0x49, 0x44, 0x41,
    0x54, 0x48, 0xC7, 0x63, 0xF8, 0x0F, 0x00, 0x00,
    0x00, 0x01, 0x00, 0x01, 0x00, 0x18, 0xDD, 0x8D,
    0xB4, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
  ]);
  
  return basicPNG;
}

// 需要生成的图标尺寸
const sizes = [16, 32, 48, 72, 96, 128, 144, 152, 192, 256, 384, 512];

console.log('开始生成图标文件...');

sizes.forEach(size => {
  const iconPath = path.join(__dirname, `../public/icons/icon-${size}x${size}.png`);
  const pngData = createIconPNG(size);
  
  fs.writeFileSync(iconPath, pngData);
  console.log(`已生成: icon-${size}x${size}.png`);
});

console.log('所有图标文件生成完成！'); 